CREATE OR REPLACE FUNCTION UpdateTipCount()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  'BEGIN UPDATE Users SET TipCount = TipCount + 1 WHERE OLD.UserID = NEW.UserID; RETURN NEW; END;'

CREATE TRIGGER AddTipCount
AFTER INSERT
ON Tips
FOR EACH ROW
  EXECUTE PROCEDURE UpdateTipCount();

CREATE OR REPLACE FUNCTION updatenumTips()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  'BEGIN UPDATE Businesses SET NumTips = NumTips + 1 WHERE OLD.BusinessID = NEW.BusinessID; RETURN NEW; END;'

CREATE TRIGGER AddNumTips
AFTER INSERT
ON Tips
FOR EACH ROW
  EXECUTE PROCEDURE UpdateNumTips();

CREATE OR REPLACE FUNCTION updatenumCheckins()
  RETURNS TRIGGER
 LANGUAGE PLPGSQL
 AS
 'BEGIN UPDATE Businesses SET NumCheckIns = NumCheckIns + 1 WHERE OLD.BusinessID = NEW.BusinessID; RETURN NEW; END;'

CREATE TRIGGER addNumCheckins
AFTER INSERT
ON CheckIns
FOR EACH ROW
  EXECUTE PROCEDURE updatenumCheckins();

CREATE OR REPLACE FUNCTION updatetotalLikes()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  'BEGIN UPDATE Users SET TotalLikes = (SELECT SUM(likes) FROM Tips WHERE Users.UserID=Tips.UserID) WHERE OLD.UserID = NEW.UserID; RETURN NEW; END;'

CREATE TRIGGER AddTotalLikes
AFTER INSERT ON Tips
FOR EACH ROW
  EXECUTE PROCEDURE updatenumCheckins();